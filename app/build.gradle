import com.android.build.gradle.api.BaseVariant

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion versions.compileSDK

    defaultConfig {
        applicationId "com.sahilgarg90.androidboilerplate"
        minSdkVersion versions.minSDK
        targetSdkVersion versions.maxSDK
        versionCode versions.appVersionCode
        versionName "$versions.appVersionMajor.$versions.appVersionMinor.$versions.appVersionPatch"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "java.util.Map<String,String>", "URLS_MAP", getBuildConfigMapEntry(urls)
        }
        debug {
            buildConfigField "java.util.Map<String,String>", "URLS_MAP", getBuildConfigMapEntry(debug_urls)
        }
    }
    applicationVariants.all {
        variant ->
            printBuildConfigKeys(variant, keys)
    }

    buildFeatures {
        dataBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

apply from: 'dependencies.gradle'

static void printBuildConfigKeys(BaseVariant variant, LinkedHashMap[] maps) {
    maps.each { map ->
        map.each { key, value ->
            variant.buildConfigField "String", "$key", "\"$value\""
        }
    }
}

static String getBuildConfigMapEntry(LinkedHashMap[] maps) {
    StringBuilder putCommandForAll = new StringBuilder()
    maps.each { map ->
        map.each { key, value ->
            putCommandForAll.append("put(\"$key\",$value);")
        }
    }
    return "new java.util.HashMap() {{${putCommandForAll.toString()}}}"
}